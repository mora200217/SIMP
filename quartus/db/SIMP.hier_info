|simp
clk => clk.IN1
scl << i2c_master:i2c_master_uut.scl
sda <> i2c_master:i2c_master_uut.sda
start => start.IN1


|simp|i2c_master:i2c_master_uut
clk => scl.DATAB
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => done~reg0.CLK
clk => busy~reg0.CLK
clk => sda_enable_master.CLK
clk => sda_out.CLK
clk => state~9.DATAIN
rst_n => done~reg0.ACLR
rst_n => busy~reg0.ACLR
rst_n => sda_enable_master.PRESET
rst_n => sda_out.PRESET
rst_n => state~11.DATAIN
rst_n => bit_count[0].ENA
rst_n => data_out[7]~reg0.ENA
rst_n => data_out[6]~reg0.ENA
rst_n => data_out[5]~reg0.ENA
rst_n => data_out[4]~reg0.ENA
rst_n => data_out[3]~reg0.ENA
rst_n => data_out[2]~reg0.ENA
rst_n => data_out[1]~reg0.ENA
rst_n => data_out[0]~reg0.ENA
rst_n => shift_reg[7].ENA
rst_n => shift_reg[6].ENA
rst_n => shift_reg[5].ENA
rst_n => shift_reg[4].ENA
rst_n => shift_reg[3].ENA
rst_n => shift_reg[2].ENA
rst_n => shift_reg[1].ENA
rst_n => shift_reg[0].ENA
rst_n => bit_count[3].ENA
rst_n => bit_count[2].ENA
rst_n => bit_count[1].ENA
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => Selector0.IN2
read_write => Selector27.IN4
read_write => state.DATAB
read_write => state.DATAB
slave_addr[0] => Selector26.IN4
slave_addr[1] => Selector25.IN4
slave_addr[2] => Selector24.IN4
slave_addr[3] => Selector23.IN4
slave_addr[4] => Selector22.IN4
slave_addr[5] => Selector21.IN4
slave_addr[6] => Selector20.IN4
data_in[0] => shift_reg.DATAB
data_in[1] => shift_reg.DATAB
data_in[2] => shift_reg.DATAB
data_in[3] => shift_reg.DATAB
data_in[4] => shift_reg.DATAB
data_in[5] => shift_reg.DATAB
data_in[6] => shift_reg.DATAB
data_in[7] => shift_reg.DATAB
reg_addr[0] => ~NO_FANOUT~
reg_addr[1] => ~NO_FANOUT~
reg_addr[2] => ~NO_FANOUT~
reg_addr[3] => ~NO_FANOUT~
reg_addr[4] => ~NO_FANOUT~
reg_addr[5] => ~NO_FANOUT~
reg_addr[6] => ~NO_FANOUT~
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
busy <= busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
done <= done~reg0.DB_MAX_OUTPUT_PORT_TYPE
scl <= scl.DB_MAX_OUTPUT_PORT_TYPE
sda <> sda


